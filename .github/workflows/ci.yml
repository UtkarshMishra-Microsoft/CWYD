name: CWYD Deploy-Test-Cleanup Pipeline

on:
  push:
    branches:
      - main
      - dev
      - demo
  schedule:
    - cron: '0 8,20 * * *'
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      RESOURCE_GROUP_NAME: ${{ steps.check_create_rg.outputs.RESOURCE_GROUP_NAME }}
      WEBAPP_URL: ${{ steps.get_output.outputs.WEBAPP_URL }}
      DEPLOYMENT_SUCCESS: ${{ steps.deployment_status.outputs.SUCCESS }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version

      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Generate Resource Group Name
        id: generate_rg_name
        run: |
          ACCL_NAME="cwyd"
          SHORT_UUID=$(uuidgen | cut -d'-' -f1)
          UNIQUE_RG_NAME="arg-${ACCL_NAME}-${SHORT_UUID}"
          echo "RESOURCE_GROUP_NAME=${UNIQUE_RG_NAME}" >> $GITHUB_ENV
          echo "Generated RESOURCE_GROUP_NAME: ${UNIQUE_RG_NAME}"

      - name: Set Deployment Region
        run: |
          echo "AZURE_LOCATION=eastus" >> $GITHUB_ENV

      - name: Check and Create Resource Group
        id: check_create_rg
        run: |
          rg_exists=$(az group exists --name ${{ env.RESOURCE_GROUP_NAME }})
          if [ "$rg_exists" = "false" ]; then
            az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.AZURE_LOCATION }}
          fi
          echo "RESOURCE_GROUP_NAME=${{ env.RESOURCE_GROUP_NAME }}" >> $GITHUB_OUTPUT

      - name: Install Bicep CLI
        run: az bicep install

      - name: Deploy Bicep Template (Resource Group Scope)
        id: deploy
        run: |
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --template-file infra/main.bicep \
            --parameters solutionName=${{ env.RESOURCE_GROUP_NAME }} createdBy="Pipeline"

      - name: Extract Web App URLs
        id: get_output
        run: |
          WEBAPP_NAMES=$(az webapp list --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "[].name" -o tsv)
          for NAME in $WEBAPP_NAMES; do
            if [[ $NAME == app-* ]]; then
              WEBAPP_URL="https://${NAME}.azurewebsites.net"
              echo "WEBAPP_URL=$WEBAPP_URL" >> $GITHUB_OUTPUT
              echo "WEBAPP_URL=$WEBAPP_URL"
            fi
          done

      - name: Set Deployment Status
        id: deployment_status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "SUCCESS=true" >> $GITHUB_OUTPUT
          else
            echo "SUCCESS=false" >> $GITHUB_OUTPUT
          fi

      - name: Logout from Azure
        if: always()
        run: |
          az logout
          echo "Logged out from Azure."

  cleanup:
    if: always() && needs.deploy.outputs.RESOURCE_GROUP_NAME != ''
    needs: [deploy]
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP_NAME: ${{ needs.deploy.outputs.RESOURCE_GROUP_NAME }}
    steps:
      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version

      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Delete Resource Group
        run: |
          rg_exists=$(az group exists --name ${{ env.RESOURCE_GROUP_NAME }})
          if [ "$rg_exists" = "true" ]; then
            az group delete \
                --name ${{ env.RESOURCE_GROUP_NAME }} \
                --yes \
                --no-wait
            echo "Resource group deleted... ${{ env.RESOURCE_GROUP_NAME }}"
          else
            echo "Resource group does not exist."
          fi

      - name: Logout from Azure
        if: always()
        run: |
          az logout
          echo "Logged out from Azure."
